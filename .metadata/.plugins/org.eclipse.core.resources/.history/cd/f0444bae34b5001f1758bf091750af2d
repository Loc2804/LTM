package Controller;

import java.io.IOException;

import Model.BEAN.User;
import Model.BO.UserBO;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class UserController
 */
@WebServlet("/UserController")
public class UserController extends HttpServlet {
	private static final long serialVersionUID = 1L;

    /**
     * Default constructor. 
     */
    public UserController() {
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String idnv = request.getParameter("idnv");
		String idpb = request.getParameter("idpb");
		String diachi = request.getParameter("diachi");
		String hoten = request.getParameter("hoten");
		
		String action = request.getParameter("action");
		User user = new User();
		
		UserBO bo = new UserBO();
		if(action.equals("add")) {
			boolean check = bo.create(ns);
			if(check) {
				List<NhanSu> list = new ArrayList<>();
				List<String> listId = new ArrayList<String>();
            	list = bo.getList();
            	listId = bo.getAllId();
    			request.getSession().setAttribute("listNS", list);
    			request.getSession().setAttribute("listId", listId);
    			String username =(String) request.getSession().getAttribute("name");
    			request.getSession().setAttribute("name",username);
    			RequestDispatcher rs = getServletContext().getRequestDispatcher("/CRUDNS.jsp");
    			rs.forward(request, response);
			}
			else {
				 response.getWriter().println("False!");
			}
		}
		else if(action.equals("update")) {
			boolean check = bo.update(ns);
			if(check) {
				List<NhanSu> list = new ArrayList<>();
            	list = bo.getList();
            	List<String> listId = new ArrayList<String>();
            	listId = bo.getAllId();
            	request.getSession().setAttribute("listId", listId);
    			request.getSession().setAttribute("listNS", list);
    			String username =(String) request.getSession().getAttribute("name");
    			request.getSession().setAttribute("name",username);
    			RequestDispatcher rs = getServletContext().getRequestDispatcher("/CRUDNS.jsp");
    			rs.forward(request, response);
			}
			else {
				 response.getWriter().println("False!");
			}
		}
		else if(action.equals("delete")) {
			String deleteId = request.getParameter("idnv_delete");
			boolean check = bo.delete(deleteId);
			if(check) {
				List<NhanSu> list = new ArrayList<>();
            	list = bo.getList();
            	List<String> listId = new ArrayList<String>();
            	listId = bo.getAllId();
            	request.getSession().setAttribute("listId", listId);
    			request.getSession().setAttribute("listNS", list);
    			String username =(String) request.getSession().getAttribute("name");
    			request.getSession().setAttribute("name",username);
    			RequestDispatcher rs = getServletContext().getRequestDispatcher("/CRUDNS.jsp");
    			rs.forward(request, response);
			}
			else {
				 response.getWriter().println("False!");
			}
		}

	}

}
